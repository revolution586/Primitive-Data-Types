Byte:
-The byte data type is an 8-bit signed two complement's integer
-It has a minimum value of -128 and a maximum of 127 (inclusive)
-The byte data type can be useful for saving memory in large arrays, where the memory savings actually matters
-They can also be used in place of int where theor limits help to clarify your code; the fact that a variable's range is limited
as a form of documentation

Short:
-The short data type is a 16-bit signed two complements integer
-It has a minimum value of -32,768 and a maximum value of 32,767 (inclusive)
-Its with byte, the same guidelines apply: you can ask a short to save memory in large arrays, in situations where the memory saving
actually matters

Int:
-By default, the int data type is a 32-bit signed two's complement integer, which has a minimum valie of -231 andd a maximum value
of 231. 
-You can use the int data type to represent an unsigned 32-bit integer, which has a minimum value of 0 and a maximum value of 232-1.
Use the integer class to use int data type on an unused integer
-Static methods like compareUnsigned, divideUnsigned etc, have been added to the Integer class to support the arithemetic operations 
of unsigned integers

Long:
-The long data type is a 64-bit two's complement's integer
-The signed long has a minimum calue of -263 and a maximum value of 263
-You can use the int data type to represent an unsigned 64-bit long, which a minimum value of 0 and a maximum value of 264-1.
-Use this data type when you need a range of values wider than those provided by int.
-The long class also contains methods like compareUnsigned, divideUnsigned, etc. to support arithmetic operations for unsigned long

Float:
-The float data type is a simple precision 32-bit IEEE 754 floating point
-It's range of values is beyond the scope of its discussion, but is specified in the Floating-Point Types, Farmers, and Values section
of the Java Language Specification
-As with the recommendations for byte and short, use a float (instead of double) if you need to save memory in large arrays of 
floating point numbers. Thus data tyype shouuld never be used for precise values, such as currency. 
-For precise values, you will need to use the java.math.BigDecimal class instead. 
-Numbers and Strings covers BigDecimal and other useful classes by the Java platform

Double:
-The double data type is a double precision 64-bit IEEE 754 floating point
-For decimal values, this data type is generally the default above
-As mentioned above, this data should be used for precise values, such as currency

Boolean:
-The boolean data type has only two possible values: true and false
-Use this data type for simple flags that track true and false conditions
-This data type represents one bit of information, but its "size" isn't something that's precisely defined.
